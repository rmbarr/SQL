# For this project, I downloaded Spotify data on the top 50 songs in 2021 from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

SELECT * FROM Spotifydata;

--Which artists appeared more than 2 times in the Top 50 and what was their average popularity?
SELECT artist_name, count(artist_name), avg(popularity) FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING count(artist_name) > 2;

--What are the Top 10 most energetic songs?
SELECT track_name, energy FROM BIT_DB.Spotifydata
ORDER BY energy desc
LIMIT 10;

--What are the Top 5 songs that contain the least amount of words?
SELECT track_name, speechiness FROM BIT_DB.Spotifydata
ORDER BY speechiness asc
LIMIT 5;

--What is the average danceability by artist and track?
SELECT distinct artist_name, track_name, avg(danceability) FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--Which song has the longest duration and what is it's liveness? (most likely the song is a live recording)
SELECT track_name, duration_ms, liveness FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;
